	GCC 4.3 Patches
	---------------

As of 2008-03-23, there are a number of issues with respect to GCC
4.3.  A post on the Boost list gives a query to list all the open
reports in the Boost trac system:

  http://svn.boost.org/trac/boost/query?status=new&status=assigned&status=reopened&summary=~4.3&order=priority

Here we track the open tickets and status with respect to the Debian
gcc-4.3.patch:

  Ticket  Inc?  Comment
  ------  ----  ----------------------------------
  1528     no   Not clear whether patch is good.
  1570    yes   Patch of 2008-01-15.
  1605     no   Library property_tree not present in 1.34.1
  1615    yes   Patch of 2008-02-02.
  1617    yes   Partial: in patch of 2008-02-02, first two files failed, 
                only numerics_tests.cpp applied.
  1630     no   No patch given as of 2008-03-23.


	Thread Support
	--------------

All debian libraries are supposed to be built with _REENTRANT defined
(policy 10.2).  For the jam-built libraries, use "<define>_REENTRANT"
on command line in debian/rules.  For graph library, set in Makefile.


	Boost.Python
	------------

Versions up to 1.34.1-7 built only with python 2.4.  Various people
agitated for a python 2.5 version, and several desired both 2.4 and
2.5 simultaneously.  This sparked some mailing list talk, e.g.
http://lists.debian.org/debian-python/2008/02/msg00033.html

Runtime Shared Libraries
------------------------

Of the four options presented in the above post the easiest solution
is to use --buildid, as that embeds the buildid into the SONAME.  The
py24 and py25 shared libraries can thus happily coexist.

The next challenge is to ensure that all the existing Boost.Python
SONAMES continue to work.

libboost-python1.34.1 installs:

    /usr/lib/libboost_python-gcc42-1_34_1.so.1.34.1
    /usr/lib/libboost_python-gcc42-mt-1_34_1.so.1.34.1
    /usr/lib/libboost_python-gcc41-mt-1_34_1.so.1.34.1
    /usr/lib/libboost_python-gcc41-1_34_1.so.1.34.1

while libboost-dbg installs:

    /usr/lib/libboost_python-gcc42-d-1_34_1.so.1.34.1
    /usr/lib/libboost_python-gcc42-mt-d-1_34_1.so.1.34.1
    /usr/lib/libboost_python-gcc41-mt-d-1_34_1.so.1.34.1
    /usr/lib/libboost_python-gcc41-d-1_34_1.so.1.34.1

Which means the following 8 SONAMEs must exist:

    libboost_python-gcc42-1_34_1.so.1.34.1
    libboost_python-gcc42-mt-1_34_1.so.1.34.1
    libboost_python-gcc42-d-1_34_1.so.1.34.1
    libboost_python-gcc42-mt-d-1_34_1.so.1.34.1

    libboost_python-gcc41-1_34_1.so.1.34.1
    libboost_python-gcc41-mt-1_34_1.so.1.34.1
    libboost_python-gcc41-d-1_34_1.so.1.34.1
    libboost_python-gcc41-mt-d-1_34_1.so.1.34.1

And these must be python 2.4 versions, i.e. symlinks
such as

    libboost_python-gcc42-1_34_1.so.1.34.1 -->
    libboost_python-gcc42-1_34_1-py24.so.1.34.1

Link Libraries
--------------

The link libraries are similarly generated in fully-decorated
form, e.g. 

    libboost_python-gcc42-1_34_1-py24.so
    libboost_python-gcc42-1_34_1-py25.so

We generate simpler names without gcc and boost versioning:

    libboost_python-py24.so -> libboost_python-gcc42-1_34_1-py24.so
    libboost_python-py25.so -> libboost_python-gcc42-1_34_1-py25.so

This lets packagers link with an explicit python version, perhaps
building an extension for all supported python versions.

For those who just want to build against the default python
version, there is an extra set of symlinks:

    libboost_python.so -> libboost_python-py24.so

There is also a script (libboost-python-dev.rtupdate) that is run when
the python runtime version is changed, which changes symlinks to the
new python runtime.


	Documentation
	-------------

Generate the list of documentation files using wget going through
localhost to get the source tree

    path=Packages/boost/alioth/build-area/boost-1.35.0
    wget -r --no-parent --domains=localhost \
	http://localhost/lsrc/$path/index.html
    cd localhost/....
    rm -rf boost
    for f in `find * -type f`; do
        test -f /usr/local/src/$path/$f && echo $f;
    done > df1
    find * -name '*.htm' -or -name '*.html' > df2
    cat df1 df2 | sort | uniq > documentation-files

** On my machine, "http://localhost/lsrc" resolves to "/usr/local/src",
   which is where I unpack and build boost.

* need to symlink .../HTML/boost to /usr/include/boost; when put
  the symlink into the deb, it got converted to a directory during
  installation; use dh_link to do it

* use -Nlibboost-doc with dh_compress to inhibit compressing files in the HTML
  tree


	Examples
	--------

List of example directories obtained using

    find * -name 'example*' -type d > debian/example-files


