	Built Libraries
	---------------

              static    shared
date_time     yes       yes
filesystem    yes       yes
graph         yes       yes
python        yes*      yes
regex         yes       yes
signals       yes       yes
test          yes       yes (comprises 3 libraries)
thread        no        yes

* built but not useful, thus not distributed.

Any static-only libs (none at the present time) are incorporated into
boost-dev package.


	Thread Support
	--------------

All debian libraries are supposed to be built with _REENTRANT defined
(policy 10.2).  For the jam-built libraries, use "<define>_REENTRANT"
on command line in debian/rules.  For graph library, set in Makefile.


	STLPort and GCC 3
	-----------------

Boost built using GCC 3 passes the regression testing.  This is
the default GCC now, so stlport is no longer used.


	Documentation
	-------------

Generate the list of documentation files using wget going through
localhost to get the source tree

    wget -r --no-parent --domains=localhost \
	http://localhost/lsrc/devel/Boost/boost-svn/trunk/index.htm
    cd localhost/....
    rm -rf boost
    for f in `find * -type f`; do
        test -f /usr/local/src/devel/Boost/boost-svn/trunk/$f && echo $f;
    done > df1
    find * -name '*.htm' -or '*.html' > df2
    cat df1 df2 | sort | uniq > documentation-files

** On my machine, "http://localhost/lsrc" resolves to "/usr/local/src",
   which is where I unpack and build boost.

* need to symlink .../HTML/boost to /usr/include/boost; when put
  the symlink into the deb, it got converted to a directory during
  installation; use dh_link to do it

* use -Nlibboost-doc with dh_compress to inhibit compressing files in the HTML
  tree


	Examples
	--------

List of example directories obtained using

    find * -name 'example*' -type d > debian/example-files

