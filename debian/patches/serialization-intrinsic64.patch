Fixes build error on some architectures, likely 64-bit ones that use
GCC 4.3.

Reported upstream http://svn.boost.org/trac/boost/ticket/1715
Patch pulled from upstream SVN, changesets 

------------------------------------------------------------------------
r43958 | ramey | 2008-03-31 11:49:53 -0500 (Mon, 31 Mar 2008) | 1 line

correction of error which prevented compilation on gcc 43 - again
------------------------------------------------------------------------
r43955 | ramey | 2008-03-31 10:46:48 -0500 (Mon, 31 Mar 2008) | 1 line

Corrected error in detection of 64 bit support
------------------------------------------------------------------------


--- boost1.35-1.35.0.orig/boost/archive/polymorphic_iarchive.hpp
+++ boost1.35-1.35.0/boost/archive/polymorphic_iarchive.hpp
@@ -17,6 +17,7 @@
 //  See http://www.boost.org for updates, documentation, and revision history.
 
 #include <cstddef> // std::size_t
+#include <climits> // ULONG_MAX 
 #include <boost/config.hpp>
 
 #if defined(BOOST_NO_STDC_NAMESPACE)
@@ -38,9 +39,16 @@
 // i.e. that its not a synonym for (unsigned) long
 // if there is no 64 bit int or if its the same as a long
 // we shouldn't define separate functions for int64 data types.
-#if defined(BOOST_NO_INT64_T) \
-    || (ULONG_MAX != 0xffffffff && ULONG_MAX == 18446744073709551615u) // 2**64 - 1
-#   define BOOST_NO_INTRINSIC_INT64_T
+#if defined(BOOST_NO_INT64_T)
+    #define BOOST_NO_INTRINSIC_INT64_T
+#else 
+    #if defined(ULONG_MAX)
+        #if(ULONG_MAX != 0xffffffff && ULONG_MAX == 18446744073709551615u) // 2**64 - 1
+            #define BOOST_NO_INTRINSIC_INT64_T
+        #endif
+    #else 
+        #define BOOST_NO_INTRINSIC_INT64_T
+    #endif
 #endif
 
 namespace boost {
--- boost1.35-1.35.0.orig/boost/archive/polymorphic_oarchive.hpp
+++ boost1.35-1.35.0/boost/archive/polymorphic_oarchive.hpp
@@ -17,6 +17,7 @@
 //  See http://www.boost.org for updates, documentation, and revision history.
 
 #include <cstddef> // size_t
+#include <climits> // ULONG_MAX 
 #include <string>
 
 #include <boost/config.hpp>
@@ -37,9 +38,16 @@
 // i.e. that its not a synonym for (unsigned) long
 // if there is no 64 bit int or if its the same as a long
 // we shouldn't define separate functions for int64 data types.
-#if defined(BOOST_NO_INT64_T) \
-    || (ULONG_MAX != 0xffffffff && ULONG_MAX == 18446744073709551615u) // 2**64 - 1
-#   define BOOST_NO_INTRINSIC_INT64_T
+#if defined(BOOST_NO_INT64_T)
+    #define BOOST_NO_INTRINSIC_INT64_T
+#else 
+    #if defined(ULONG_MAX)
+        #if(ULONG_MAX != 0xffffffff && ULONG_MAX == 18446744073709551615u) // 2**64 - 1
+            #define BOOST_NO_INTRINSIC_INT64_T
+        #endif
+    #else 
+        #define BOOST_NO_INTRINSIC_INT64_T
+    #endif
 #endif
 
 namespace boost {
