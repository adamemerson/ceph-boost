--- boost1.38-1.38.0.orig/tools/jam/src/expand.c
+++ boost1.38-1.38.0/tools/jam/src/expand.c
@@ -82,7 +82,7 @@
     int depth;
 
     if ( DEBUG_VAREXP )
-        printf( "expand '%.*s'\n", end - in, in );
+        printf( "expand '%.*s'\n", (int)(end - in), in );
 
     /* This gets a lot of cases: $(<) and $(>). */
     if
--- boost1.38-1.38.0.orig/tools/jam/src/class.c
+++ boost1.38-1.38.0/tools/jam/src/class.c
@@ -119,7 +119,7 @@
     }
     else
     {
-        hashenter( classes, (HASHDATA * *)&pp );
+        (void)hashenter( classes, (HASHDATA * *)&pp );
     }
     check_defined( bases );
 
--- boost1.38-1.38.0.orig/tools/jam/src/modules.c
+++ boost1.38-1.38.0/tools/jam/src/modules.c
@@ -143,7 +143,7 @@
     {
         char * s = module_names->string;
         char * * ss = &s;
-        hashenter( h, (HASHDATA * *)&ss );
+        (void)hashenter( h, (HASHDATA * *)&ss );
     }
 
     PROFILE_EXIT( IMPORT_MODULE );
--- boost1.38-1.38.0.orig/tools/jam/src/search.c
+++ boost1.38-1.38.0/tools/jam/src/search.c
@@ -213,7 +213,7 @@
         /* CONSIDER: we probably should issue a warning is another file
            is explicitly bound to the same location. This might break
            compatibility, though. */
-        hashenter( explicit_bindings, (HASHDATA * *)&ba );
+        (void)hashenter( explicit_bindings, (HASHDATA * *)&ba );
     }
 
     /* prepare a call to BINDRULE if the variable is set */
--- boost1.38-1.38.0.orig/tools/jam/src/native.c
+++ boost1.38-1.38.0/tools/jam/src/native.c
@@ -31,6 +31,6 @@
         }
         n.procedure = parse_make( f, P0, P0, P0, C0, C0, 0 );
         n.version = version;
-        hashenter(m->native_rules, (HASHDATA**)&np);
+        (void)hashenter(m->native_rules, (HASHDATA**)&np);
     }
 }
